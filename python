Testowy wiersz-08
Testowy wiersz-07
Testowy wiersz-06
Testowy wiersz-05
Testowy wiersz-04
Testowy wiersz-03
Testowy wiersz-02
Testowy wiersz-01import sys
import argparse


def tail(file, lines=None, bytes=None):
    if bytes is None and lines is None:
        lines = 10

    if file:
        try:
            with open(file, 'rb') as f:
                if bytes is not None:
                    f.seek(-int(bytes), 2)
                lines_to_print = f.readlines()
        except FileNotFoundError:
            print("File not found:", file)
            sys.exit(1)
    else:
        lines_to_print = sys.stdin.readlines()

    if lines is not None:
        lines_to_print = lines_to_print[-int(lines):]

    for line in lines_to_print:
        sys.stdout.buffer.write(line)


class SimpleArgumentParser:
    def __init__(self):
        self.args = {}

    def add_argument(self, arg, nargs=1):
        self.args[arg] = nargs

    def parse_args(self, argv):
        parsed_args = {}
        i = 1
        while i < len(argv):
            if argv[i] in self.args:
                nargs = self.args[argv[i]]
                if nargs == 1:
                    parsed_args[argv[i]] = argv[i + 1]
                    i += 2
                else:
                    parsed_args[argv[i]] = argv[i + 1:i + 1 + nargs]
                    i += 1 + nargs
            else:
                parsed_args["file"] = argv[i]
                i += 1
        return parsed_args


if __name__ == "__main__":
    parser = SimpleArgumentParser()
    # nargs=1 oznacza jeden argument do "--lines" nargs = '?' oznacza 0 lub 1 argument
    parser.add_argument("--lines", nargs=1)
    parser.add_argument("--bytes", nargs=1)
    parser.add_argument("file", nargs="?")

    arg_num = len(sys.argv)
    print("arg_num= ", arg_num)
    for i in range(arg_num):
        print(sys.argv[i])
    args = parser.parse_args(sys.argv)

    print(args)

    # parser = argparse.ArgumentParser(description="Print the last lines of a file or stdin.")
    # parser.add_argument("file", nargs="?", help="File to read from.")
    # parser.add_argument("--lines", "-n", type=int, help="Number of lines to print.")
    # parser.add_argument("--bytes", "-c", type=int, help="Number of bytes to print.")
    # args = parser.parse_args()
    #
    # python lab_4_3tail.py --lines=5 test.txt
    # python lab_4_3tail.py --bytes=50 test.txt
    # cat test.txt | python lab_4_3tail.py
    # type test.txt | python lab_4_3tail.py
    # python lab_4_3tail.py test.txt
    # cat inny_plik.txt | python lab_4_3tail.py test.txt
    #
    # tail(args.get("file"), args.lines, args.bytes)
    tail(args.get("file"), args.get("lines"), args.get("bytes"))
    #
    # logs = read_log()
    # # testowy wydruk     python lab_4_3tail.py < test.txt
    # for log in logs:
    #     print(log)
